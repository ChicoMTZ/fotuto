# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2016-04-29 14:31
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('windows', '0003_auto_20150226_1536'),
        ('vars', '0008_auto_20160316_1625'),
    ]

    operations = [
        migrations.CreateModel(
            name='Mimic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50)),
                ('x', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('y', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('width', models.SmallIntegerField(default=160)),
                ('height', models.SmallIntegerField(default=210)),
                ('graphic_type', models.CharField(choices=[(b'svg', b'SVG')], default=b'svg', max_length=20)),
                ('graphic', models.TextField(blank=True, help_text=b'Static graphic')),
                ('description', models.TextField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='MimicVar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max', models.FloatField(blank=True, help_text=b"Maximum var's value to represent", null=True)),
                ('min', models.FloatField(blank=True, help_text=b"Minimum var's value to represent", null=True)),
                ('graphic', models.TextField(blank=True, help_text=b'Dynamic graphic to represent change in the variable, in case of svg code, tag should contain the attribute class with the name of the variable')),
                ('description', models.TextField(blank=True, max_length=255)),
                ('mimic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mimics.Mimic')),
            ],
        ),
        migrations.CreateModel(
            name='Rule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attr', models.CharField(help_text=b'Attribute to modify', max_length=50)),
                ('operation', models.TextField(help_text=b'JavaScript function content returning the result to assign to the attribute, if the function require params define it in the params field, for multiple sentences be sure to add an `;`', max_length=300)),
                ('params', models.CharField(blank=True, help_text=b'A comma separated list of params to pass to the function with content specified in operation field', max_length=255)),
                ('description', models.TextField(blank=True, max_length=255)),
            ],
        ),
        migrations.AddField(
            model_name='mimicvar',
            name='rules',
            field=models.ManyToManyField(blank=True, help_text=b'List of rules to apply in order to change the graphic according variable change', null=True, to='mimics.Rule'),
        ),
        migrations.AddField(
            model_name='mimicvar',
            name='var',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vars.Var'),
        ),
        migrations.AddField(
            model_name='mimic',
            name='vars',
            field=models.ManyToManyField(blank=True, through='mimics.MimicVar', to='vars.Var'),
        ),
        migrations.AddField(
            model_name='mimic',
            name='window',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mimics', to='windows.Window'),
        ),
    ]
