# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2016-05-15 03:26
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('vars', '0008_auto_20160316_1625'),
        ('windows', '0004_auto_20160513_0903'),
    ]

    operations = [
        migrations.CreateModel(
            name='Mimic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50)),
                ('x', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('y', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('width', models.SmallIntegerField(default=160)),
                ('height', models.SmallIntegerField(default=210)),
                ('graphic_type', models.CharField(choices=[(b'svg', b'SVG')], default=b'svg', max_length=20)),
                ('graphic', models.TextField(blank=True, help_text=b"Dynamic graphic to represent changes in variables, in case of svg code, tag's attributes could contains variables slug defined in var list, used var in the format `{{ <VAR_SLUG> }}`. If you need to transform a value of a variable define a rule for it.")),
                ('description', models.TextField(blank=True, max_length=255)),
            ],
            options={
                'ordering': ('x', 'y', 'name'),
            },
        ),
        migrations.CreateModel(
            name='Rule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min', models.FloatField(blank=True, help_text=b"Minimum var's value to represent", null=True)),
                ('max', models.FloatField(blank=True, help_text=b"Maximum var's value to represent", null=True)),
                ('operation', models.TextField(default=b'return <SOME_VAR_SLUG>;', help_text=b'JavaScript function content returning the result to assign to the attribute. Any var slug can be used as var, since all of them will be passed by parameters, also `min` and `max` can be used as vars.For multiple sentences be sure to add a `;`.', max_length=300)),
                ('description', models.TextField(blank=True, max_length=255)),
                ('var', models.ForeignKey(help_text=b'Variable to modify', null=True, on_delete=django.db.models.deletion.CASCADE, to='vars.Var')),
            ],
        ),
        migrations.AddField(
            model_name='mimic',
            name='rules',
            field=models.ManyToManyField(blank=True, help_text=b'List of rules to apply in order to change the graphic according variable change', null=True, to='mimics.Rule'),
        ),
        migrations.AddField(
            model_name='mimic',
            name='vars',
            field=models.ManyToManyField(blank=True, to='vars.Var'),
        ),
        migrations.AddField(
            model_name='mimic',
            name='window',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mimics', to='windows.Window'),
        ),
    ]
